Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Create the form
$form = New-Object System.Windows.Forms.Form
$form.Text = 'Network Installer'
$form.Size = New-Object System.Drawing.Size(450, 350)

# Label for Network Share Path
$labelPath = New-Object System.Windows.Forms.Label
$labelPath.Text = 'Enter Network Share Path:'
$labelPath.Location = New-Object System.Drawing.Point(20, 20)
$labelPath.Size = New-Object System.Drawing.Size(250, 20)
$form.Controls.Add($labelPath)

# TextBox for Network Share Path
$networkSharePathBox = New-Object System.Windows.Forms.TextBox
$networkSharePathBox.Size = New-Object System.Drawing.Size(300, 20)
$networkSharePathBox.Location = New-Object System.Drawing.Point(20, 50)
$networkSharePathBox.Text = '\\server\share'
$form.Controls.Add($networkSharePathBox)

# Label for Username
$labelUser = New-Object System.Windows.Forms.Label
$labelUser.Text = 'Enter Admin Username:'
$labelUser.Location = New-Object System.Drawing.Point(20, 80)
$labelUser.Size = New-Object System.Drawing.Size(250, 20)
$form.Controls.Add($labelUser)

# TextBox for Username
$usernameBox = New-Object System.Windows.Forms.TextBox
$usernameBox.Size = New-Object System.Drawing.Size(300, 20)
$usernameBox.Location = New-Object System.Drawing.Point(20, 110)
$form.Controls.Add($usernameBox)

# Label for Password
$labelPass = New-Object System.Windows.Forms.Label
$labelPass.Text = 'Enter Admin Password:'
$labelPass.Location = New-Object System.Drawing.Point(20, 140)
$labelPass.Size = New-Object System.Drawing.Size(250, 20)
$form.Controls.Add($labelPass)

# TextBox for Password (masked)
$passwordBox = New-Object System.Windows.Forms.MaskedTextBox
$passwordBox.PasswordChar = '*'
$passwordBox.Size = New-Object System.Drawing.Size(300, 20)
$passwordBox.Location = New-Object System.Drawing.Point(20, 170)
$form.Controls.Add($passwordBox)

# Install Button
$installButton = New-Object System.Windows.Forms.Button
$installButton.Size = New-Object System.Drawing.Size(100, 30)
$installButton.Location = New-Object System.Drawing.Point(150, 210)
$installButton.Text = 'Install'
$form.Controls.Add($installButton)

# Label for Progress Messages
$progressLabel = New-Object System.Windows.Forms.Label
$progressLabel.Size = New-Object System.Drawing.Size(400, 20)
$progressLabel.Location = New-Object System.Drawing.Point(20, 260)
$progressLabel.Text = ''
$form.Controls.Add($progressLabel)

# Event handler for Install Button
$installButton.Add_Click({
    $progressLabel.Text = 'Mapping network drive...'

    try {
        # Retrieve user credentials
        $securePassword = ConvertTo-SecureString -String $passwordBox.Text -AsPlainText -Force
        $credentials = New-Object System.Management.Automation.PSCredential ($usernameBox.Text, $securePassword)

        # Map network drive with admin credentials
        $driveLetter = "Z"
        New-PSDrive -Name $driveLetter -PSProvider FileSystem -Root $networkSharePathBox.Text -Credential $credentials -Persist

        # Path to the installer
        $installerPath = "$driveLetter\installer.exe"
        $expectedChecksum = "expected-sha256-checksum"

        # Verify file integrity
        $actualChecksum = Get-FileHash -Path $installerPath -Algorithm SHA256 | Select-Object -ExpandProperty Hash
        if ($actualChecksum -ne $expectedChecksum) {
            $progressLabel.Text = 'Checksum does not match! Exiting.'
            return
        }

        # Silent install with elevated privileges
        $progressLabel.Text = 'Installing software...'
        $arguments = "/silent /quiet"
        
        Start-Process -FilePath $installerPath -ArgumentList $arguments -Credential $credentials -NoNewWindow -Wait
        
        $progressLabel.Text = 'Installation complete!'
        
    } catch {
        $progressLabel.Text = 'An error occurred. Please check the log for details.'
        $_.Exception.Message | Out-File -FilePath "installer_log.txt" -Append
    }
})

# Show the form
$form.ShowDialog()
